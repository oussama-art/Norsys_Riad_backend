security:
  enable_authenticator_manager: true
  password_hashers:
    App\Entity\User: 'auto'
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: 'auto'
      cost: 15

  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username

  firewalls:
    api:
      pattern: ^/api/
      stateless: true
      json_login:
        check_path: /api/login
        username_path: username
        password_path: password
#        success_handler: lexik_jwt_authentication.handler.authentication_success
#        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      # JWT Authenticator for protected routes
      jwt: ~
      login_throttling:
        max_attempts: 5
        interval: '1 minute'


    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider


  access_control:
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/password-reset-request, roles: PUBLIC_ACCESS }
    - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }
    - { path: ^/api/redirect-to-page-reset-password, roles: PUBLIC_ACCESS }
    - { path: ^/api/admin/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/admin/login, roles: PUBLIC_ACCESS }
    - { path: ^/api/riads, roles: PUBLIC_ACCESS }
    - { path: ^/api/rooms, roles: PUBLIC_ACCESS }
    - { path: ^/api/reservations, roles:  PUBLIC_ACCESS  }
    - { path: ^/api/, roles: IS_AUTHENTICATED_FULLY }
    - { path: ^/api/users/\d+/archive, roles: ROLE_ADMIN }
    - { path: ^/api/users/\d+/activate, roles: ROLE_ADMIN }

  role_hierarchy:
    ROLE_ADMIN: ROLE_USER  # ROLE_ADMIN includes ROLE_USER permissions
    ROLE_SUPER_ADMIN: ROLE_ADMIN  # ROLE_SUPER_ADMIN includes ROLE_ADMIN permissions
